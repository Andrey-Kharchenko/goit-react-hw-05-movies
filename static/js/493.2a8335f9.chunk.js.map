{"version":3,"file":"static/js/493.2a8335f9.chunk.js","mappings":"sPACA,EAA6B,yBAA7B,EAA6D,mBAA7D,EAAuF,mBAAvF,EAAuH,yBAAvH,EAA4J,wB,SCqD5J,EAhDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAcpB,OAZAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,IAAgB,GAADC,OAAInB,IAAW,KAAD,EAA9Cc,EAAQC,EAAAK,KACdb,EAAQO,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAElBO,QAAQC,MAAM,iJAA6BR,EAAAM,IAAS,yBAAAN,EAAAS,OAAA,GAAAX,EAAA,kBAEvD,kBAPc,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAQfjB,GACF,GAAG,CAACT,KAGF2B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAeH,SAAC,UAC9BC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAASH,SACL,IAAhBvB,EAAK2B,QACJH,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0CAEHvB,EAAK4B,KAAI,SAAAC,GAAiD,IAA9CC,EAAOD,EAAPC,QAASC,EAAIF,EAAJE,KAAMC,EAASH,EAATG,UAAWC,EAAYJ,EAAZI,aACpC,OACEZ,EAAAA,EAAAA,MAAA,MAAII,UAAWC,EAASH,SAAA,EACtBC,EAAAA,EAAAA,KAAA,OACEU,IACED,EAAY,sCAAApB,OAC8BoB,G,08VAG5CE,IAAI,GACJC,MAAO,OAETf,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAeH,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,KAAGI,UAAWC,EAAcH,SAAA,CAAC,UAAQQ,MACrCV,EAAAA,EAAAA,MAAA,KAAGI,UAAWC,EAAcH,SAAA,CAAC,cAAYS,UAZfF,EAgBlC,QAKV,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast_title\":\"Cast_cast_title__tDg3e\",\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"item_block\":\"Cast_item_block__iOrRw\",\"text_name\":\"Cast_text_name__NN4HU\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { theMovieCastAPI } from 'services/api';\nimport css from './Cast.module.css';\nimport img from '../../services/img/no-avatar.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n    \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await theMovieCastAPI(`${movieId}`);\n        setCast(response);\n      } catch (error) {\n        console.error('Ошибка при загрузке данных:', error);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n    \n  return (\n    <>\n      <p className={css.cast_title}>cast</p>\n      <ul className={css.list}>\n        {cast.length === 0 ? (\n          <p>We don`t have any cast for this movie</p>\n        ) : (\n          cast.map(({ cast_id, name, character, profile_path }) => {\n            return (\n              <li className={css.item} key={cast_id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/original${profile_path}`\n                      : img\n                  }\n                  alt=\"\"\n                  width={300}\n                />\n                <div className={css.item_block}>\n                  <p className={css.text_name}>Actor: {name}</p>\n                  <p className={css.text_name}>Character: {character}</p>\n                </div>\n              </li>\n            );\n          })\n        )}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","theMovieCastAPI","concat","sent","t0","console","error","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","className","css","length","map","_ref2","cast_id","name","character","profile_path","src","alt","width"],"sourceRoot":""}